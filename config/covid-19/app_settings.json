{
  "setup_complete": true,
  "locales": [
    {
      "code": "en",
      "name": "English"
    }
  ],
  "locale": "en",
  "locale_outgoing": "en",
  "date_format": "YYYY-MM-DD",
  "reported_date_format": "YYYY-MM-DD HH:mm:ss",
  "forms_only_mode": false,
  "default_responses": {
    "start_date": ""
  },
  "district_admins_access_unallocated_messages": false,
  "public_access": false,
  "default_country_code": 1,
  "gateway_number": "+13125551212",
  "schedule_morning_hours": 0,
  "schedule_morning_minutes": 0,
  "schedule_evening_hours": 23,
  "schedule_evening_minutes": 0,
  "synthetic_date": "",
  "contact_display_short": "clinic.name",
  "roles": {
    "chw_supervisor": {
      "name": "usertype.chw-supervisor",
      "offline": true
    },
    "chw": {
      "name": "usertype.chw",
      "offline": true
    }
  },
  "permissions": {
    "can_bulk_delete_reports": [
      "chw_supervisor",
      "chw"
    ],
    "can_create_people": [
      "chw_supervisor",
      "chw"
    ],
    "can_create_places": [
      "chw_supervisor",
      "chw"
    ],
    "can_create_records": [
      "chw_supervisor",
      "chw"
    ],
    "can_delete_contacts": [
      "chw_supervisor",
      "chw"
    ],
    "can_delete_messages": [
      "chw_supervisor",
      "chw"
    ],
    "can_delete_reports": [
      "chw_supervisor",
      "chw"
    ],
    "can_edit": [
      "chw_supervisor",
      "chw"
    ],
    "can_edit_profile": [
      "chw_supervisor",
      "chw"
    ],
    "can_edit_verification": [
      "chw_supervisor",
      "chw"
    ],
    "can_export_all": [
      "chw_supervisor",
      "chw"
    ],
    "can_export_contacts": [
      "chw_supervisor",
      "chw"
    ],
    "can_export_feedback": [
      "chw_supervisor",
      "chw"
    ],
    "can_export_messages": [
      "chw_supervisor",
      "chw"
    ],
    "can_update_places": [
      "chw_supervisor",
      "chw"
    ],
    "can_update_reports": [
      "chw_supervisor",
      "chw"
    ],
    "can_export_dhis": [
      "chw_supervisor"
    ],
    "can_verify_reports": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_call_action": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_message_action": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_reports": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_reports_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_unallocated_data_records": [
      "chw_supervisor",
      "chw"
    ],
    "can_aggregate_targets": [
      "chw_supervisor"
    ]
  },
  "changes_controller": {
    "reiterate_changes": true,
    "changes_limit": 100,
    "debounce_interval": 200
  },
  "place_hierarchy_types": [
    "district_hospital",
    "health_center"
  ],
  "contact_types": [
    {
      "id": "district_hospital",
      "name_key": "contact.type.district_hospital",
      "group_key": "contact.type.district_hospital.plural",
      "create_key": "contact.type.district_hospital.new",
      "edit_key": "contact.type.place.edit",
      "icon": "medic-district-hospital",
      "create_form": "form:contact:district_hospital:create",
      "edit_form": "form:contact:district_hospital:edit"
    },
    {
      "id": "health_center",
      "name_key": "contact.type.health_center",
      "group_key": "contact.type.health_center.plural",
      "create_key": "contact.type.health_center.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "district_hospital"
      ],
      "icon": "medic-health-center",
      "create_form": "form:contact:health_center:create",
      "edit_form": "form:contact:health_center:edit"
    },
    {
      "id": "clinic",
      "name_key": "contact.type.clinic",
      "group_key": "contact.type.clinic.plural",
      "create_key": "contact.type.clinic.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "health_center"
      ],
      "icon": "medic-clinic",
      "create_form": "form:contact:clinic:create",
      "edit_form": "form:contact:clinic:edit",
      "count_visits": true
    },
    {
      "id": "person",
      "name_key": "contact.type.person",
      "group_key": "contact.type.person.plural",
      "create_key": "contact.type.person.new",
      "edit_key": "contact.type.person.edit",
      "primary_contact_key": "clinic.field.contact",
      "parents": [
        "district_hospital",
        "health_center",
        "clinic"
      ],
      "icon": "medic-person",
      "create_form": "form:contact:person:create",
      "edit_form": "form:contact:person:edit",
      "person": true
    }
  ],
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var n=t();for(var o in n)('object'==typeof exports?exports:e)[o]=n[o]}}(ContactSummary,(function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,'a',t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p='',n(n.s=0)}([function(e,t,n){var o=n(1),r=n(2);e.exports=r(o,contact,reports)},function(e,t){const n=contact,o=lineage,r=[{appliesToType:'person',label:'patient_id',value:n.patient_id,width:4},{appliesToType:'person',label:'contact.age',value:n.date_of_birth,width:4,filter:'age'},{appliesToType:'person',label:'contact.sex',value:'contact.sex.'+n.sex,translate:!0,width:4},{appliesToType:'person',label:'person.field.phone',value:n.phone,width:4},{appliesToType:'person',label:'person.field.alternate_phone',value:n.phone_alternate,width:4},{appliesToType:'person',label:'External ID',value:n.external_id,width:4},{appliesToType:'person',label:'contact.parent',value:o,filter:'lineage'},{appliesToType:'!person',label:'contact',value:n.contact&&n.contact.name,width:4},{appliesToType:'!person',label:'contact.phone',value:n.contact&&n.contact.phone,width:4},{appliesToType:'!person',label:'External ID',value:n.external_id,width:4},{appliesToType:'!person',appliesIf:()=>n.parent&&o[0],label:'contact.parent',value:o,filter:'lineage'},{appliesToType:'person',label:'Address',value:n.address,width:12},{appliesToType:'!person',label:'Address',value:n.address,width:12},{appliesToType:'person',label:'contact.notes',value:n.notes,width:12},{appliesToType:'!person',label:'contact.notes',value:n.notes,width:12}];e.exports={context:{},cards:[],fields:r}},function(e,t){function n(e){return e?Array.isArray(e)?e:[e]:[]}function o(e,t){switch(typeof e){case'undefined':return!0;case'function':return e(t);default:return e}}function r(e,t,n){if(o(e.appliesIf,n)){var r='function'==typeof e.fields?e.fields(n):e.fields.filter((function(e){return o(e.appliesIf,n)})).map((function(e){var t={};return a(e,t,'label'),a(e,t,'value'),a(e,t,'translate'),a(e,t,'filter'),a(e,t,'width'),a(e,t,'icon'),e.context&&(t.context={},a(e.context,t.context,'count'),a(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,n),{label:e.label,fields:r}}function a(e,t,o){switch(typeof e[o]){case'undefined':return;case'function':t[o]=e[o](n);break;default:t[o]=e[o]}}}e.exports=function(e,t,o){var a=e.fields||[],l=e.context||{},p=e.cards||[],i=t&&('contact'===t.type?t.contact_type:t.type),s={cards:[],fields:a.filter((function(e){var t=n(e.appliesToType),o=t.filter((function(e){return e&&'!'===e.charAt(0)}));if((0===t.length||t.includes(i)||o.length>0&&!o.includes('!'+i))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return p.forEach((function(e){var t,a,p,c,u=n(e.appliesToType);if(u.includes('report')&&u.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(u.includes('report'))for(t=0;t<o.length;++t)a=o[t],!(c=a)||c.errors&&c.errors.length||(p=r(e,l,a))&&s.cards.push(p);else{if(!u.includes(i)&&u.length>0)return;(p=r(e,l))&&s.cards.push(p)}})),s.context=l,s}}])})); return ContactSummary;",
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { !function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(t,'__esModule',{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&'object'==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,'default',{enumerable:!0,value:t}),2&e&&'string'!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,'a',e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p='',r(r.s=1)}([function(t,e){t.exports=function(t){var e={};!function t(e,r){var n=Object.keys(e);for(var o in n){var i=n[o];switch(typeof e[i]){case'object':t(e[i],r);break;case'function':e[i]=e[i].bind(r)}}}(t,e),e.definition=function t(e){var r=Object.assign({},e),n=Object.keys(r);for(var o in n){var i=n[o];if(Array.isArray(r[i])){r[i]=r[i].slice(0);for(var a=0;a<r[i].length;++a)'object'==typeof r[i][a]&&(r[i][a]=t(r[i][a]))}else'object'==typeof r[i]&&(r[i]=t(r[i]))}return r}(t)}},function(t,e,r){var n=r(2),o=r(4),i=r(5);r(7)(o,c,Utils,Target,emit),i(n,c,Utils,Task,emit),emit('_complete',{_id:!0})},function(t,e,r){const n=r(3),{isFormArraySubmittedInWindow:o,addDays:i,getField:a}=n;t.exports=[{name:'covid19-rdt-capture-results',icon:'icon-follow-up',title:'task.covid19.capture.title',appliesTo:'reports',appliesToType:['covid19:rdt:provision'],appliesIf:(t,e)=>!!a(e,'test-reference.test_id'),resolvedIf:(t,e,r,n)=>{if(!t.reports)return!1;if(!t.reports.find(t=>{if('covid19:rdt:capture'!==t.form)return!1;const r=a(e,'test-reference.test_id');return a(t,'test_id')===r}))return!1;const c=Math.max(i(n,-r.start).getTime(),e.reported_date+1),d=i(n,r.end+1).getTime();return o(t.reports,['covid19:rdt:capture'],c,d)},actions:[{type:'report',form:'covid19:rdt:capture',modifyContent:function(t,e,r){t.test_id=a(r,'test-reference.test_id'),console.warn('getField(report, \\'patient_uuid\\')',a(r,'patient_uuid')),t.patient_uuid=a(r,'patient_uuid')}}],events:[{id:'covid19-rdt-capture-event',start:1,end:2,days:1}]},{name:'covid19-rdt-repeat',icon:'icon-follow-up',title:'task.covid19.repeat.title',appliesTo:'reports',appliesToType:['covid19:rdt:capture'],appliesIf:(t,e)=>'yes'===a(e,'repeat-test.repeat_test'),resolvedIf:(t,e,r,n)=>{if(!t.reports)return!1;if(!t.reports.find(t=>'covid19:rdt:provision'===t.form&&a(t,'patient_uuid')===a(e,'patient_uuid')))return!1;const c=Math.max(i(n,-r.start).getTime(),e.reported_date+1),d=i(n,r.end+1).getTime();return o(t.reports,['covid19:rdt:provision'],c,d)},actions:[{type:'report',form:'covid19:rdt:provision',modifyContent:function(t,e,r){t.patient_uuid=a(r,'patient_uuid')}}],events:[{id:'covid19-rdt-capture-event',start:1,end:2,days:1}]}]},function(t,e){t.exports={addDays:function(t,e){const r=function(t){const e=new Date(t);return e.setHours(0),e.setMinutes(0),e.setSeconds(0),e.setMilliseconds(0),e}(new Date(t));return r.setDate(r.getDate()+e),r},isFormArraySubmittedInWindow:function(t,e,r,n,o){let i=!1,a=0;return t.forEach((function(t){e.includes(t.form)&&t.reported_date>=r&&t.reported_date<=n&&(i=!0,o&&a++)})),o?a>=o:i},getField:function(t,e){return['fields',...(e||'').split('.')].reduce((t,e)=>{if(void 0!==t)return t[e]},t)}}},function(t,e){t.exports=[]},function(t,e,r){var n=r(0),o=r(6);function i(t,e,r,n,o,i){var a;if(t.appliesToType){var c;if('contacts'===t.appliesTo){if(!o.contact)return;c='contact'===o.contact.type?o.contact.contact_type:o.contact.type}else{if(!i)return;c=i.form}if(-1===t.appliesToType.indexOf(c))return}if('scheduled_tasks'===t.appliesTo||!t.appliesIf||t.appliesIf(o,i))if('scheduled_tasks'===t.appliesTo){if(i&&t.appliesIf){if(!i.scheduled_tasks)return;for(a=0;a<i.scheduled_tasks.length;a++)t.appliesIf(o,i,a)&&s(a)}}else s();function d(t,e,r){var n;return(n='function'==typeof t.contactLabel?t.contactLabel(e,r):t.contactLabel)?{name:n}:e.contact}function s(a){var c,s,u,f,l=null;for(c=0;c<t.events.length;c++){if((s=t.events[c]).dueDate)l=s.dueDate(s,o,i,a);else if(i)l=void 0!==a?new Date(e.addDate(new Date(i.scheduled_tasks[a].due),s.days)):new Date(e.addDate(new Date(i.reported_date),s.days));else if(s.dueDate)l=s.dueDate(s,o);else{var v=o.contact&&o.contact.reported_date?new Date(o.contact.reported_date):new Date;l=new Date(e.addDate(v,s.days))}e.isTimely(l,s)&&(f={_id:(i?i._id:o.contact&&o.contact._id)+'~'+(s.id||c)+'~'+t.name,deleted:!(!(o.contact&&o.contact.deleted||i)||!i.deleted),doc:o,contact:d(t,o,i),icon:t.icon,date:l,readyStart:s.start||0,readyEnd:s.end||0,title:t.title,resolved:t.resolvedIf(o,i,s,l,a),actions:p(t.actions,s)},void 0!==a&&(f._id+='-'+a),'function'==typeof(u=t.priority)&&(u=u(o,i)),u&&(f.priority=u.level,f.priorityLabel=u.label),n('task',new r(f)))}}function p(e,r){return t.actions.map((function(t){return function(t,e){var r={source:'task',source_id:i?i._id:o.contact&&o.contact._id,contact:o.contact};t.modifyContent&&t.modifyContent(r,o,i,e);return{type:t.type||'report',form:t.form,label:t.label||'Follow up',content:r}}(t,r)}))}}t.exports=function(t,e,r,a,c){if(t)for(var d,s,p=0;p<t.length;++p)switch('function'!=typeof(d=Object.assign({},t[p],o)).resolvedIf&&(d.resolvedIf=function(t,e,n,o){return d.defaultResolvedIf(t,e,n,o,r)}),n(d),d.appliesTo){case'reports':case'scheduled_tasks':for(var u=0;u<e.reports.length;++u)s=e.reports[u],i(d,r,a,c,e,s);break;case'contacts':e.contact&&i(d,r,a,c,e);break;default:throw new Error('Unrecognised task.appliesTo: '+d.appliesTo)}}},function(t,e){t.exports={defaultResolvedIf:function(t,e,r,n,o){var i,a;o||(o=Utils);var c=function(t){var e;if(!t||!t.actions)return;return(e=t.actions.find((function(t){return!t.type||'report'===t.type})))&&e.form}(this.definition);if(!c)throw new Error('Could not find the default resolving form!');return i=0,i=e?Math.max(o.addDate(n,-r.start).getTime(),e.reported_date+1):o.addDate(n,-r.start).getTime(),a=o.addDate(n,r.end+1).getTime(),o.isFormSubmittedInWindow(t.reports,c,i,a)}}},function(t,e,r){var n=r(0);function o(t,e,r,n,o,i){var a=!!i;if(o.contact){var c='contact'===o.contact.type?o.contact.contact_type:o.contact.type,d=a?i.form:c;if(!(t.appliesToType&&t.appliesToType.indexOf(d)<0)&&(!t.appliesIf||t.appliesIf(o,i)))for(var s=a?i:o.contact,p=function(t,e,r){var n;return n='function'==typeof t.idType?t.idType(e,r):'report'===t.idType?r&&r._id:e.contact&&e.contact._id,Array.isArray(n)||(n=[n]),n}(t,o,i),u=!t.passesIf||!!t.passesIf(o,i),f=function(t,e,r,n){if('function'==typeof t.date)return t.date(r,n);if(void 0===t.date||'now'===t.date)return e.now().getTime();if('reported'===t.date)return n?n.reported_date:r.contact.reported_date;throw new Error('Unrecognised value for target.date: '+t.date)}(t,r,o,i),l=t.groupBy&&t.groupBy(o,i),v=0;v<p.length;++v){var y=new e({_id:p[v]+'~'+t.id,contact:o.contact,deleted:!!s.deleted,type:t.id,pass:u,groupBy:l,date:f});t.emitCustom?t.emitCustom(m,y,o,i):m(y)}}function m(t){n('target',t)}}t.exports=function(t,e,r,i,a){for(var c=0;c<t.length;++c){var d=t[c];switch(n(d),d.appliesTo){case'contacts':o(d,i,r,a,e);break;case'reports':for(var s=0;s<e.reports.length;++s){o(d,i,r,a,e,e.reports[s])}break;default:throw new Error('Unrecognised target.appliesTo: '+d.appliesTo)}}}}]); }\n}",
    "targets": {
      "enabled": true,
      "items": []
    }
  }
}
